{
    "env": {
        "browser": false,
        "es6": true
    },
    "extends": [
        "plugin:@typescript-eslint/recommended"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        // "project": "tsconfig.json",
        "ecmaFeatures": {
            "jsx": false
        },
        "ecmaVersion": 2018,
        "sourceType": "module"
    },
    "settings": {
        "react": {
            "version": "detect"
        }
    },
    "rules": {
        // "@typescript-eslint/tslint/config": ["warn", {
        //     "lintFile": "./tslint.json"
        // }],
        "@typescript-eslint/explicit-function-return-type": 0,
        "@typescript-eslint/no-use-before-define": 0,
        // "@typescript-eslint/array-type": 0,
        "@typescript-eslint/member-delimiter-style": [
            "warn",
            {
                "multiline": {
                    "delimiter": "semi",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "comma",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/prefer-interface": 0,
        "@typescript-eslint/no-unused-vars": 0,
        "@typescript-eslint/no-non-null-assertion": 0,
        "@typescript-eslint/camelcase": 0,
        "@typescript-eslint/explicit-member-accessibility": [
            "warn",
            {
                "accessibility": "no-public"
            }
        ],
        "@typescript-eslint/no-explicit-any": 0,
        "@typescript-eslint/no-empty-interface": 0,
        // "@typescript-eslint/no-object-literal-type-assertion": ["error", {
        //     "allowAsParameter": true
        // }],
        "no-console": [
            "warn",
            {
                "allow": ["groupCollapsed", "groupEnd"]
            }   
        ],
        "@typescript-eslint/indent": [
            "error",
            4
        ],
        "quotes": [
            "error",
            "single",
            {"avoidEscape": true, "allowTemplateLiterals": true}
        ],
        "semi": [
            "error",
            "always"
        ],
        // consider reenabling these rules:
        "@typescript-eslint/explicit-module-boundary-types": 0
    }
}